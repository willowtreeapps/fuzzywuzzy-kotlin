/*
 * Copyright 2018 Russell Wolf
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "patjackson52"
            name "Patrick Jackson"
        }
    }
    scm {
        url "https://github.com/willowtreeapps/fuzzywuzzy-kotlin"
    }
}

/*
bintray {
    def keyProps = new Properties()
    def keyFile = file("../local.properties")
    if (keyFile.exists()) keyFile.withInputStream { keyProps.load(it) }

    user = keyProps.getProperty("bintrayUser")
    key = keyProps.getProperty("bintrayKey")

    pkg {
        userOrg = 'willowtreeapps'
        repo = 'fuzzywuzzy-kotlin'
        name = "fuzzywuzzy-kotlin"
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/willowtreeapps/fuzzywuzzy-kotlin'
    }
}
*/

afterEvaluate {
    project.publishing.publications.forEach { publication ->
        publication.pom.withXml {
            def root = asNode()
            root.appendNode('name', project.name)
            root.appendNode('description', 'Fuzzy string matching for Kotlin multiplatform')
            root.appendNode('url', 'https://github.com/willowtreeapps/fuzzywuzzy-kotlin')
            root.children().last() + pomConfig
        }
    }
}

//bintrayUpload.doFirst {
//    publications = project.publishing.publications
//}

publishing {
    def keyProps = new Properties()
    def keyFile = file("../local.properties")
    if (keyFile.exists()) keyFile.withInputStream { keyProps.load(it) }

    def sonatypeUsername = keyProps.getProperty("sonatypeUsername")
    def sonatypePassword = keyProps.getProperty("sonatypePassword")
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId 'com.willowtreeapps'
            artifactId 'fuzzywuzzy-kotlin'
            version '0.1'

//            from components.java

            /*
            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
            */
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Fuzzy String matching - port of python FuzzyWuzzy'
            name 'FuzzyWuzzy'
            url 'https://github.com/willowtreeapps/fuzzywuzzy-kotlin'
            organization {
                name 'com.github.mautini'
                url 'https://github.com/mautini'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/willowtreeapps/fuzzywuzzy-kotlin/issues'
            }
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'https://github.com/willowtreeapps/fuzzywuzzy-kotlin/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/mautini/schemaorg-java'
                connection 'scm:git:git://github.com/willowtreeapps/fuzzywuzzy-kotlin.git'
                developerConnection 'scm:git:ssh://git@github.com:patjackson52/fuzzywuzzy-kotlin.git'
            }
            developers {
                developer {
                    name 'Patrick Jackson'
                }
            }
        }
    }
}
model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}
signing {
    sign configurations.archives
}
